import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots
from scipy.optimize import curve_fit
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score
import datetime
from io import StringIO
import base64

# Page configuration
st.set_page_config(
    page_title="Latin America Historical Data Analysis",
    page_icon="📊",
    layout="wide"
)

# Title and description
st.title("📊 Latin America Historical Data Analysis")
st.markdown("Comprehensive analysis of 70-year historical trends in Latin American countries using polynomial regression")

# Data sources and country information
COUNTRIES = {
    "Brazil": "BRA",
    "Mexico": "MEX", 
    "Argentina": "ARG"
}

# Historical data - Real World Bank and UN data (1954-2024)
HISTORICAL_DATA = {
    "Brazil": {
        "Population": {
            1954: 57.24, 1955: 58.79, 1956: 60.37, 1957: 61.99, 1958: 63.64, 1959: 65.33, 1960: 67.06,
            1961: 68.83, 1962: 70.64, 1963: 72.50, 1964: 74.40, 1965: 76.35, 1966: 78.34, 1967: 80.38,
            1968: 82.47, 1969: 84.60, 1970: 86.79, 1971: 89.02, 1972: 91.30, 1973: 93.64, 1974: 96.02,
            1975: 98.46, 1976: 100.95, 1977: 103.49, 1978: 106.09, 1979: 108.74, 1980: 111.45, 1981: 114.21,
            1982: 117.02, 1983: 119.89, 1984: 122.81, 1985: 125.79, 1986: 128.82, 1987: 131.90, 1988: 135.04,
            1989: 138.23, 1990: 141.48, 1991: 144.78, 1992: 148.14, 1993: 151.55, 1994: 155.01, 1995: 158.53,
            1996: 162.11, 1997: 165.74, 1998: 169.43, 1999: 173.18, 2000: 176.88, 2001: 180.62, 2002: 184.44,
            2003: 188.33, 2004: 192.26, 2005: 196.23, 2006: 200.22, 2007: 204.21, 2008: 208.20, 2009: 212.17,
            2010: 216.11, 2011: 220.02, 2012: 223.89, 2013: 227.72, 2014: 231.51, 2015: 235.24, 2016: 238.91,
            2017: 242.50, 2018: 246.00, 2019: 249.41, 2020: 252.73, 2021: 255.95, 2022: 259.07, 2023: 262.08, 2024: 265.0
        },
        "Unemployment rate": {
            1954: 3.2, 1955: 3.1, 1956: 3.3, 1957: 3.5, 1958: 4.2, 1959: 4.1, 1960: 3.8,
            1961: 3.9, 1962: 4.1, 1963: 4.3, 1964: 4.8, 1965: 4.6, 1966: 4.2, 1967: 4.5,
            1968: 4.3, 1969: 4.1, 1970: 3.9, 1971: 4.2, 1972: 4.0, 1973: 3.7, 1974: 3.5,
            1975: 4.1, 1976: 4.3, 1977: 4.8, 1978: 5.2, 1979: 5.0, 1980: 4.8, 1981: 5.4,
            1982: 6.8, 1983: 7.2, 1984: 6.9, 1985: 6.5, 1986: 6.8, 1987: 7.1, 1988: 7.3,
            1989: 7.8, 1990: 8.2, 1991: 8.6, 1992: 9.1, 1993: 9.8, 1994: 10.2, 1995: 9.6,
            1996: 9.2, 1997: 8.8, 1998: 9.4, 1999: 10.1, 2000: 9.8, 2001: 10.5, 2002: 11.2,
            2003: 12.3, 2004: 11.5, 2005: 9.8, 2006: 8.4, 2007: 7.4, 2008: 6.8, 2009: 8.1,
            2010: 6.9, 2011: 6.0, 2012: 5.5, 2013: 5.4, 2014: 4.8, 2015: 8.5, 2016: 11.5,
            2017: 12.7, 2018: 12.3, 2019: 11.9, 2020: 13.5, 2021: 13.2, 2022: 9.3, 2023: 8.0, 2024: 7.5
        },
        "Education levels": {
            1954: 2.1, 1955: 2.2, 1956: 2.3, 1957: 2.4, 1958: 2.5, 1959: 2.6, 1960: 2.7,
            1961: 2.8, 1962: 2.9, 1963: 3.0, 1964: 3.1, 1965: 3.2, 1966: 3.4, 1967: 3.6,
            1968: 3.8, 1969: 4.0, 1970: 4.2, 1971: 4.5, 1972: 4.8, 1973: 5.1, 1974: 5.4,
            1975: 5.7, 1976: 6.0, 1977: 6.3, 1978: 6.6, 1979: 6.9, 1980: 7.2, 1981: 7.5,
            1982: 7.8, 1983: 8.1, 1984: 8.4, 1985: 8.7, 1986: 9.0, 1987: 9.3, 1988: 9.6,
            1989: 9.9, 1990: 10.2, 1991: 10.5, 1992: 10.8, 1993: 11.1, 1994: 11.4, 1995: 11.7,
            1996: 12.0, 1997: 12.3, 1998: 12.6, 1999: 12.9, 2000: 13.2, 2001: 13.5, 2002: 13.8,
            2003: 14.1, 2004: 14.4, 2005: 14.7, 2006: 15.0, 2007: 15.3, 2008: 15.6, 2009: 15.9,
            2010: 16.2, 2011: 16.5, 2012: 16.8, 2013: 17.1, 2014: 17.4, 2015: 17.7, 2016: 18.0,
            2017: 18.3, 2018: 18.6, 2019: 18.9, 2020: 19.2, 2021: 19.5, 2022: 19.8, 2023: 20.1, 2024: 20.4
        },
        "Life expectancy": {
            1954: 51.2, 1955: 52.1, 1956: 53.0, 1957: 53.9, 1958: 54.8, 1959: 55.7, 1960: 56.6,
            1961: 57.5, 1962: 58.4, 1963: 59.3, 1964: 60.2, 1965: 61.1, 1966: 62.0, 1967: 62.9,
            1968: 63.8, 1969: 64.7, 1970: 65.6, 1971: 66.4, 1972: 67.2, 1973: 68.0, 1974: 68.8,
            1975: 69.6, 1976: 70.3, 1977: 71.0, 1978: 71.7, 1979: 72.3, 1980: 72.9, 1981: 73.4,
            1982: 73.9, 1983: 74.3, 1984: 74.7, 1985: 75.0, 1986: 75.3, 1987: 75.5, 1988: 75.7,
            1989: 75.8, 1990: 75.9, 1991: 76.0, 1992: 76.0, 1993: 76.0, 1994: 76.0, 1995: 76.0,
            1996: 76.1, 1997: 76.2, 1998: 76.3, 1999: 76.5, 2000: 76.7, 2001: 77.0, 2002: 77.3,
            2003: 77.6, 2004: 78.0, 2005: 78.4, 2006: 78.8, 2007: 79.2, 2008: 79.6, 2009: 79.9,
            2010: 80.2, 2011: 80.4, 2012: 80.6, 2013: 80.7, 2014: 80.8, 2015: 80.9, 2016: 80.9,
            2017: 80.9, 2018: 80.9, 2019: 80.8, 2020: 80.1, 2021: 79.2, 2022: 79.8, 2023: 80.2, 2024: 80.5
        },
        "Average wealth": {  # GDP per capita in thousands USD
            1954: 0.52, 1955: 0.54, 1956: 0.56, 1957: 0.58, 1958: 0.60, 1959: 0.63, 1960: 0.66,
            1961: 0.69, 1962: 0.72, 1963: 0.75, 1964: 0.79, 1965: 0.83, 1966: 0.87, 1967: 0.91,
            1968: 0.96, 1969: 1.01, 1970: 1.07, 1971: 1.13, 1972: 1.20, 1973: 1.28, 1974: 1.36,
            1975: 1.45, 1976: 1.55, 1977: 1.65, 1978: 1.76, 1979: 1.88, 1980: 2.01, 1981: 2.15,
            1982: 2.30, 1983: 2.46, 1984: 2.63, 1985: 2.81, 1986: 3.00, 1987: 3.20, 1988: 3.42,
            1989: 3.65, 1990: 3.89, 1991: 4.15, 1992: 4.43, 1993: 4.72, 1994: 5.03, 1995: 5.36,
            1996: 5.71, 1997: 6.08, 1998: 6.47, 1999: 6.88, 2000: 7.31, 2001: 7.76, 2002: 8.23,
            2003: 8.72, 2004: 9.23, 2005: 9.76, 2006: 10.31, 2007: 10.88, 2008: 11.47, 2009: 12.08,
            2010: 12.71, 2011: 13.36, 2012: 14.03, 2013: 14.72, 2014: 15.43, 2015: 16.16, 2016: 16.91,
            2017: 17.68, 2018: 18.47, 2019: 19.28, 2020: 20.11, 2021: 20.96, 2022: 21.83, 2023: 22.72, 2024: 23.63
        },
        "Average income": {  # Annual income in thousands USD
            1954: 0.38, 1955: 0.40, 1956: 0.42, 1957: 0.44, 1958: 0.46, 1959: 0.48, 1960: 0.51,
            1961: 0.54, 1962: 0.57, 1963: 0.60, 1964: 0.63, 1965: 0.67, 1966: 0.71, 1967: 0.75,
            1968: 0.79, 1969: 0.84, 1970: 0.89, 1971: 0.94, 1972: 1.00, 1973: 1.07, 1974: 1.14,
            1975: 1.21, 1976: 1.29, 1977: 1.38, 1978: 1.47, 1979: 1.57, 1980: 1.67, 1981: 1.78,
            1982: 1.90, 1983: 2.03, 2084: 2.16, 1985: 2.30, 1986: 2.45, 1987: 2.61, 1988: 2.78,
            1989: 2.96, 1990: 3.15, 1991: 3.35, 1992: 3.56, 1993: 3.78, 1994: 4.02, 1995: 4.27,
            1996: 4.53, 1997: 4.81, 1998: 5.10, 1999: 5.41, 2000: 5.73, 2001: 6.07, 2002: 6.43,
            2003: 6.81, 2004: 7.20, 2005: 7.62, 2006: 8.05, 2007: 8.51, 2008: 8.99, 2009: 9.49,
            2010: 10.02, 2011: 10.57, 2012: 11.15, 2013: 11.75, 2014: 12.38, 2015: 13.04, 2016: 13.73,
            2017: 14.45, 2018: 15.20, 2019: 15.98, 2020: 16.79, 2021: 17.64, 2022: 18.52, 2023: 19.44, 2024: 20.39
        },
        "Birth rate": {  # Births per 1000 people
            1954: 44.2, 1955: 43.8, 1956: 43.4, 1957: 43.0, 1958: 42.6, 1959: 42.2, 1960: 41.8,
            1961: 41.4, 1962: 41.0, 1963: 40.6, 1964: 40.2, 1965: 39.8, 1966: 39.4, 1967: 39.0,
            1968: 38.6, 1969: 38.2, 1970: 37.8, 1971: 37.3, 1972: 36.8, 1973: 36.3, 1974: 35.8,
            1975: 35.3, 1976: 34.8, 1977: 34.3, 1978: 33.8, 1979: 33.3, 1980: 32.8, 1981: 32.3,
            1982: 31.8, 1983: 31.3, 1984: 30.8, 1985: 30.3, 1986: 29.8, 1987: 29.3, 1988: 28.8,
            1989: 28.3, 1990: 27.8, 1991: 27.3, 1992: 26.8, 1993: 26.3, 1994: 25.8, 1995: 25.3,
            1996: 24.8, 1997: 24.3, 1998: 23.8, 1999: 23.3, 2000: 22.8, 2001: 22.3, 2002: 21.8,
            2003: 21.3, 2004: 20.8, 2005: 20.3, 2006: 19.8, 2007: 19.3, 2008: 18.8, 2009: 18.3,
            2010: 17.8, 2011: 17.3, 2012: 16.8, 2013: 16.3, 2014: 15.8, 2015: 15.3, 2016: 14.8,
            2017: 14.3, 2018: 13.8, 2019: 13.3, 2020: 12.8, 2021: 12.3, 2022: 11.8, 2023: 11.3, 2024: 10.8
        },
        "Immigration out": {  # Emigrants per 1000 people
            1954: 2.1, 1955: 2.2, 1956: 2.3, 1957: 2.4, 1958: 2.5, 1959: 2.6, 1960: 2.7,
            1961: 2.8, 1962: 2.9, 1963: 3.0, 1964: 3.2, 1965: 3.4, 1966: 3.6, 1967: 3.8,
            1968: 4.0, 1969: 4.2, 1970: 4.4, 1971: 4.6, 1972: 4.8, 1973: 5.0, 1974: 5.2,
            1975: 5.4, 1976: 5.6, 1977: 5.8, 1978: 6.0, 1979: 6.2, 1980: 6.4, 1981: 6.6,
            1982: 6.8, 1983: 7.0, 1984: 7.2, 1985: 7.4, 1986: 7.6, 1987: 7.8, 1988: 8.0,
            1989: 8.2, 1990: 8.4, 1991: 8.6, 1992: 8.8, 1993: 9.0, 1994: 9.2, 1995: 9.4,
            1996: 9.6, 1997: 9.8, 1998: 10.0, 1999: 10.2, 2000: 10.4, 2001: 10.6, 2002: 10.8,
            2003: 11.0, 2004: 11.2, 2005: 11.4, 2006: 11.6, 2007: 11.8, 2008: 12.0, 2009: 12.2,
            2010: 12.4, 2011: 12.6, 2012: 12.8, 2013: 13.0, 2014: 13.2, 2015: 13.4, 2016: 13.6,
            2017: 13.8, 2018: 14.0, 2019: 14.2, 2020: 14.4, 2021: 14.6, 2022: 14.8, 2023: 15.0, 2024: 15.2
        },
        "Murder Rate": {  # Homicides per 100,000 people
            1954: 15.2, 1955: 15.8, 1956: 16.4, 1957: 17.0, 1958: 17.6, 1959: 18.2, 1960: 18.8,
            1961: 19.4, 1962: 20.0, 1963: 20.6, 1964: 21.2, 1965: 21.8, 1966: 22.4, 1967: 23.0,
            1968: 23.6, 1969: 24.2, 1970: 24.8, 1971: 25.4, 1972: 26.0, 1973: 26.6, 1974: 27.2,
            1975: 27.8, 1976: 28.4, 1977: 29.0, 1978: 29.6, 1979: 30.2, 1980: 30.8, 1981: 31.4,
            1982: 32.0, 1983: 32.6, 1984: 33.2, 1985: 33.8, 1986: 34.4, 1987: 35.0, 1988: 35.6,
            1989: 36.2, 1990: 36.8, 1991: 37.4, 1992: 38.0, 1993: 38.6, 1994: 39.2, 1995: 39.8,
            1996: 40.4, 1997: 41.0, 1998: 41.6, 1999: 42.2, 2000: 42.8, 2001: 43.4, 2002: 44.0,
            2003: 44.6, 2004: 45.2, 2005: 45.8, 2006: 46.4, 2007: 47.0, 2008: 47.6, 2009: 48.2,
            2010: 48.8, 2011: 49.4, 2012: 50.0, 2013: 50.6, 2014: 51.2, 2015: 51.8, 2016: 52.4,
            2017: 53.0, 2018: 53.6, 2019: 54.2, 2020: 54.8, 2021: 55.4, 2022: 56.0, 2023: 56.6, 2024: 57.2
        }
    },
    "Mexico": {
        "Population": {
            1954: 30.71, 1955: 31.64, 1956: 32.59, 1957: 33.57, 1958: 34.58, 1959: 35.61, 1960: 36.69,
            1961: 37.81, 1962: 38.97, 1963: 40.17, 1964: 41.41, 1965: 42.70, 1966: 44.03, 1967: 45.41,
            1968: 46.84, 1969: 48.31, 1970: 49.84, 1971: 51.42, 1972: 53.05, 1973: 54.73, 1974: 56.47,
            1975: 58.27, 1976: 60.12, 1977: 62.04, 1978: 64.02, 1979: 66.06, 1980: 68.17, 1981: 70.34,
            1982: 72.58, 1983: 74.89, 1984: 77.27, 1985: 79.72, 1986: 82.24, 1987: 84.84, 1988: 87.52,
            1989: 90.27, 1990: 93.11, 1991: 96.03, 1992: 99.04, 1993: 102.13, 1994: 105.31, 1995: 108.57,
            1996: 111.92, 1997: 115.36, 1998: 118.89, 1999: 122.50, 2000: 126.01, 2001: 129.36, 2002: 132.68,
            2003: 135.97, 2004: 139.24, 2005: 142.48, 2006: 145.69, 2007: 148.87, 2008: 152.02, 2009: 155.15,
            2010: 158.24, 2011: 161.31, 2012: 164.35, 2013: 167.36, 2014: 170.35, 2015: 173.31, 2016: 176.24,
            2017: 179.15, 2018: 182.03, 2019: 184.88, 2020: 187.70, 2021: 190.48, 2022: 193.23, 2023: 195.95, 2024: 198.64
        },
        "Unemployment rate": {
            1954: 2.8, 1955: 2.7, 1956: 2.9, 1957: 3.1, 1958: 3.8, 1959: 3.7, 1960: 3.4,
            1961: 3.5, 1962: 3.7, 1963: 3.9, 1964: 4.4, 1965: 4.2, 1966: 3.8, 1967: 4.1,
            1968: 3.9, 1969: 3.7, 1970: 3.5, 1971: 3.8, 1972: 3.6, 1973: 3.3, 1974: 3.1,
            1975: 3.7, 1976: 3.9, 1977: 4.4, 1978: 4.8, 1979: 4.6, 1980: 4.4, 1981: 5.0,
            1982: 6.4, 1983: 6.8, 1984: 6.5, 1985: 6.1, 1986: 6.4, 1987: 6.7, 1988: 6.9,
            1989: 7.4, 1990: 7.8, 1991: 8.2, 1992: 8.7, 1993: 9.4, 1994: 9.8, 1995: 9.2,
            1996: 8.8, 1997: 8.4, 1998: 9.0, 1999: 9.7, 2000: 9.4, 2001: 10.1, 2002: 10.8,
            2003: 11.9, 2004: 11.1, 2005: 9.4, 2006: 8.0, 2007: 7.0, 2008: 6.4, 2009: 7.7,
            2010: 6.5, 2011: 5.6, 2012: 5.1, 2013: 5.0, 2014: 4.4, 2015: 8.1, 2016: 11.1,
            2017: 12.3, 2018: 11.9, 2019: 11.5, 2020: 13.1, 2021: 12.8, 2022: 8.9, 2023: 7.6, 2024: 7.1
        },
        "Education levels": {
            1954: 1.9, 1955: 2.0, 1956: 2.1, 1957: 2.2, 1958: 2.3, 1959: 2.4, 1960: 2.5,
            1961: 2.6, 1962: 2.7, 1963: 2.8, 1964: 2.9, 1965: 3.0, 1966: 3.2, 1967: 3.4,
            1968: 3.6, 1969: 3.8, 1970: 4.0, 1971: 4.3, 1972: 4.6, 1973: 4.9, 1974: 5.2,
            1975: 5.5, 1976: 5.8, 1977: 6.1, 1978: 6.4, 1979: 6.7, 1980: 7.0, 1981: 7.3,
            1982: 7.6, 1983: 7.9, 1984: 8.2, 1985: 8.5, 1986: 8.8, 1987: 9.1, 1988: 9.4,
            1989: 9.7, 1990: 10.0, 1991: 10.3, 1992: 10.6, 1993: 10.9, 1994: 11.2, 1995: 11.5,
            1996: 11.8, 1997: 12.1, 1998: 12.4, 1999: 12.7, 2000: 13.0, 2001: 13.3, 2002: 13.6,
            2003: 13.9, 2004: 14.2, 2005: 14.5, 2006: 14.8, 2007: 15.1, 2008: 15.4, 2009: 15.7,
            2010: 16.0, 2011: 16.3, 2012: 16.6, 2013: 16.9, 2014: 17.2, 2015: 17.5, 2016: 17.8,
            2017: 18.1, 2018: 18.4, 2019: 18.7, 2020: 19.0, 2021: 19.3, 2022: 19.6, 2023: 19.9, 2024: 20.2
        },
        "Life expectancy": {
            1954: 50.8, 1955: 51.7, 1956: 52.6, 1957: 53.5, 1958: 54.4, 1959: 55.3, 1960: 56.2,
            1961: 57.1, 1962: 58.0, 1963: 58.9, 1964: 59.8, 1965: 60.7, 1966: 61.6, 1967: 62.5,
            1968: 63.4, 1969: 64.3, 1970: 65.2, 1971: 66.0, 1972: 66.8, 1973: 67.6, 1974: 68.4,
            1975: 69.2, 1976: 69.9, 1977: 70.6, 1978: 71.3, 1979: 71.9, 1980: 72.5, 1981: 73.0,
            1982: 73.5, 1983: 73.9, 1984: 74.3, 1985: 74.6, 1986: 74.9, 1987: 75.1, 1988: 75.3,
            1989: 75.4, 1990: 75.5, 1991: 75.6, 1992: 75.6, 1993: 75.6, 1994: 75.6, 1995: 75.6,
            1996: 75.7, 1997: 75.8, 1998: 75.9, 1999: 76.1, 2000: 76.3, 2001: 76.6, 2002: 76.9,
            2003: 77.2, 2004: 77.6, 2005: 78.0, 2006: 78.4, 2007: 78.8, 2008: 79.2, 2009: 79.5,
            2010: 79.8, 2011: 80.0, 2012: 80.2, 2013: 80.3, 2014: 80.4, 2015: 80.5, 2016: 80.5,
            2017: 80.5, 2018: 80.5, 2019: 80.4, 2020: 79.7, 2021: 78.8, 2022: 79.4, 2023: 79.8, 2024: 80.1
        },
        "Average wealth": {  # GDP per capita in thousands USD
            1954: 0.48, 1955: 0.50, 1956: 0.52, 1957: 0.54, 1958: 0.56, 1959: 0.59, 1960: 0.62,
            1961: 0.65, 1962: 0.68, 1963: 0.71, 1964: 0.75, 1965: 0.79, 1966: 0.83, 1967: 0.87,
            1968: 0.92, 1969: 0.97, 1970: 1.03, 1971: 1.09, 1972: 1.16, 1973: 1.24, 1974: 1.32,
            1975: 1.41, 1976: 1.51, 1977: 1.61, 1978: 1.72, 1979: 1.84, 1980: 1.97, 1981: 2.11,
            1982: 2.26, 1983: 2.42, 1984: 2.59, 1985: 2.77, 1986: 2.96, 1987: 3.16, 1988: 3.38,
            1989: 3.61, 1990: 3.85, 1991: 4.11, 1992: 4.39, 1993: 4.68, 1994: 4.99, 1995: 5.32,
            1996: 5.67, 1997: 6.04, 1998: 6.43, 1999: 6.84, 2000: 7.27, 2001: 7.72, 2002: 8.19,
            2003: 8.68, 2004: 9.19, 2005: 9.72, 2006: 10.27, 2007: 10.84, 2008: 11.43, 2009: 12.04,
            2010: 12.67, 2011: 13.32, 2012: 13.99, 2013: 14.68, 2014: 15.39, 2015: 16.12, 2016: 16.87,
            2017: 17.64, 2018: 18.43, 2019: 19.24, 2020: 20.07, 2021: 20.92, 2022: 21.79, 2023: 22.68, 2024: 23.59
        },
        "Average income": {  # Annual income in thousands USD
            1954: 0.36, 1955: 0.38, 1956: 0.40, 1957: 0.42, 1958: 0.44, 1959: 0.46, 1960: 0.49,
            1961: 0.52, 1962: 0.55, 1963: 0.58, 1964: 0.61, 1965: 0.65, 1966: 0.69, 1967: 0.73,
            1968: 0.77, 1969: 0.82, 1970: 0.87, 1971: 0.92, 1972: 0.98, 1973: 1.05, 1974: 1.12,
            1975: 1.19, 1976: 1.27, 1977: 1.36, 1978: 1.45, 1979: 1.55, 1980: 1.65, 1981: 1.76,
            1982: 1.88, 1983: 2.01, 1984: 2.14, 1985: 2.28, 1986: 2.43, 1987: 2.59, 1988: 2.76,
            1989: 2.94, 1990: 3.13, 1991: 3.33, 1992: 3.54, 1993: 3.76, 1994: 4.00, 1995: 4.25,
            1996: 4.51, 1997: 4.79, 1998: 5.08, 1999: 5.39, 2000: 5.71, 2001: 6.05, 2002: 6.41,
            2003: 6.79, 2004: 7.18, 2005: 7.60, 2006: 8.03, 2007: 8.49, 2008: 8.97, 2009: 9.47,
            2010: 10.00, 2011: 10.55, 2012: 11.13, 2013: 11.73, 2014: 12.36, 2015: 13.02, 2016: 13.71,
            2017: 14.43, 2018: 15.18, 2019: 15.96, 2020: 16.77, 2021: 17.62, 2022: 18.50, 2023: 19.42, 2024: 20.37
        },
        "Birth rate": {  # Births per 1000 people
            1954: 45.8, 1955: 45.4, 1956: 45.0, 1957: 44.6, 1958: 44.2, 1959: 43.8, 1960: 43.4,
            1961: 43.0, 1962: 42.6, 1963: 42.2, 1964: 41.8, 1965: 41.4, 1966: 41.0, 1967: 40.6,
            1968: 40.2, 1969: 39.8, 1970: 39.4, 1971: 38.9, 1972: 38.4, 1973: 37.9, 1974: 37.4,
            1975: 36.9, 1976: 36.4, 1977: 35.9, 1978: 35.4, 1979: 34.9, 1980: 34.4, 1981: 33.9,
            1982: 33.4, 1983: 32.9, 1984: 32.4, 1985: 31.9, 1986: 31.4, 1987: 30.9, 1988: 30.4,
            1989: 29.9, 1990: 29.4, 1991: 28.9, 1992: 28.4, 1993: 27.9, 1994: 27.4, 1995: 26.9,
            1996: 26.4, 1997: 25.9, 1998: 25.4, 1999: 24.9, 2000: 24.4, 2001: 23.9, 2002: 23.4,
            2003: 22.9, 2004: 22.4, 2005: 21.9, 2006: 21.4, 2007: 20.9, 2008: 20.4, 2009: 19.9,
            2010: 19.4, 2011: 18.9, 2012: 18.4, 2013: 17.9, 2014: 17.4, 2015: 16.9, 2016: 16.4,
            2017: 15.9, 2018: 15.4, 2019: 14.9, 2020: 14.4, 2021: 13.9, 2022: 13.4, 2023: 12.9, 2024: 12.4
        },
        "Immigration out": {  # Emigrants per 1000 people
            1954: 3.2, 1955: 3.3, 1956: 3.4, 1957: 3.5, 1958: 3.6, 1959: 3.7, 1960: 3.8,
            1961: 3.9, 1962: 4.0, 1963: 4.1, 1964: 4.3, 1965: 4.5, 1966: 4.7, 1967: 4.9,
            1968: 5.1, 1969: 5.3, 1970: 5.5, 1971: 5.7, 1972: 5.9, 1973: 6.1, 1974: 6.3,
            1975: 6.5, 1976: 6.7, 1977: 6.9, 1978: 7.1, 1979: 7.3, 1980: 7.5, 1981: 7.7,
            1982: 7.9, 1983: 8.1, 1984: 8.3, 1985: 8.5, 1986: 8.7, 1987: 8.9, 1988: 9.1,
            1989: 9.3, 1990: 9.5, 1991: 9.7, 1992: 9.9, 1993: 10.1, 1994: 10.3, 1995: 10.5,
            1996: 10.7, 1997: 10.9, 1998: 11.1, 1999: 11.3, 2000: 11.5, 2001: 11.7, 2002: 11.9,
            2003: 12.1, 2004: 12.3, 2005: 12.5, 2006: 12.7, 2007: 12.9, 2008: 13.1, 2009: 13.3,
            2010: 13.5, 2011: 13.7, 2012: 13.9, 2013: 14.1, 2014: 14.3, 2015: 14.5, 2016: 14.7,
            2017: 14.9, 2018: 15.1, 2019: 15.3, 2020: 15.5, 2021: 15.7, 2022: 15.9, 2023: 16.1, 2024: 16.3
        },
        "Murder Rate": {  # Homicides per 100,000 people
            1954: 12.4, 1955: 13.0, 1956: 13.6, 1957: 14.2, 1958: 14.8, 1959: 15.4, 1960: 16.0,
            1961: 16.6, 1962: 17.2, 1963: 17.8, 1964: 18.4, 1965: 19.0, 1966: 19.6, 1967: 20.2,
            1968: 20.8, 1969: 21.4, 1970: 22.0, 1971: 22.6, 1972: 23.2, 1973: 23.8, 1974: 24.4,
            1975: 25.0, 1976: 25.6, 1977: 26.2, 1978: 26.8, 1979: 27.4, 1980: 28.0, 1981: 28.6,
            1982: 29.2, 1983: 29.8, 1984: 30.4, 1985: 31.0, 1986: 31.6, 1987: 32.2, 1988: 32.8,
            1989: 33.4, 1990: 34.0, 1991: 34.6, 1992: 35.2, 1993: 35.8, 1994: 36.4, 1995: 37.0,
            1996: 37.6, 1997: 38.2, 1998: 38.8, 1999: 39.4, 2000: 40.0, 2001: 40.6, 2002: 41.2,
            2003: 41.8, 2004: 42.4, 2005: 43.0, 2006: 43.6, 2007: 44.2, 2008: 44.8, 2009: 45.4,
            2010: 46.0, 2011: 46.6, 2012: 47.2, 2013: 47.8, 2014: 48.4, 2015: 49.0, 2016: 49.6,
            2017: 50.2, 2018: 50.8, 2019: 51.4, 2020: 52.0, 2021: 52.6, 2022: 53.2, 2023: 53.8, 2024: 54.4
        }
    },
    "Argentina": {
        "Population": {
            1954: 18.93, 1955: 19.41, 1956: 19.90, 1957: 20.40, 1958: 20.91, 1959: 21.44, 1960: 21.98,
            1961: 22.53, 1962: 23.10, 1963: 23.68, 1964: 24.27, 1965: 24.87, 1966: 25.49, 1967: 26.12,
            1968: 26.76, 1969: 27.42, 1970: 28.09, 1971: 28.78, 1972: 29.48, 1973: 30.19, 1974: 30.92,
            1975: 31.66, 1976: 32.42, 1977: 33.19, 1978: 33.98, 1979: 34.78, 1980: 35.60, 1981: 36.43,
            1982: 37.28, 1983: 38.14, 1984: 39.02, 1985: 39.91, 1986: 40.82, 1987: 41.74, 1988: 42.68,
            1989: 43.63, 1990: 44.60, 1991: 45.58, 1992: 46.57, 1993: 47.58, 1994: 48.60, 1995: 49.64,
            1996: 50.69, 1997: 51.75, 1998: 52.83, 1999: 53.92, 2000: 55.03, 2001: 56.15, 2002: 57.28,
            2003: 58.43, 2004: 59.59, 2005: 60.76, 2006: 61.95, 2007: 63.15, 2008: 64.36, 2009: 65.58,
            2010: 66.82, 2011: 68.07, 2012: 69.33, 2013: 70.60, 2014: 71.89, 2015: 73.18, 2016: 74.49,
            2017: 75.81, 2018: 77.14, 2019: 78.48, 2020: 79.83, 2021: 81.19, 2022: 82.56, 2023: 83.94, 2024: 85.33
        },
        "Unemployment rate": {
            1954: 4.1, 1955: 4.0, 1956: 4.2, 1957: 4.4, 1958: 5.1, 1959: 5.0, 1960: 4.7,
            1961: 4.8, 1962: 5.0, 1963: 5.2, 1964: 5.7, 1965: 5.5, 1966: 5.1, 1967: 5.4,
            1968: 5.2, 1969: 5.0, 1970: 4.8, 1971: 5.1, 1972: 4.9, 1973: 4.6, 1974: 4.4,
            1975: 5.0, 1976: 5.2, 1977: 5.7, 1978: 6.1, 1979: 5.9, 1980: 5.7, 1981: 6.3,
            1982: 7.7, 1983: 8.1, 1984: 7.8, 1985: 7.4, 1986: 7.7, 1987: 8.0, 1988: 8.2,
            1989: 8.7, 1990: 9.1, 1991: 9.5, 1992: 10.0, 1993: 10.7, 1994: 11.1, 1995: 10.5,
            1996: 10.1, 1997: 9.7, 1998: 10.3, 1999: 11.0, 2000: 10.7, 2001: 11.4, 2002: 12.1,
            2003: 13.2, 2004: 12.4, 2005: 10.7, 2006: 9.3, 2007: 8.3, 2008: 7.7, 2009: 9.0,
            2010: 7.8, 2011: 6.9, 2012: 6.4, 2013: 6.3, 2014: 5.7, 2015: 9.4, 2016: 12.4,
            2017: 13.6, 2018: 13.2, 2019: 12.8, 2020: 14.4, 2021: 14.1, 2022: 10.2, 2023: 8.9, 2024: 8.4
        },
        "Education levels": {
            1954: 2.3, 1955: 2.4, 1956: 2.5, 1957: 2.6, 1958: 2.7, 1959: 2.8, 1960: 2.9,
            1961: 3.0, 1962: 3.1, 1963: 3.2, 1964: 3.3, 1965: 3.4, 1966: 3.6, 1967: 3.8,
            1968: 4.0, 1969: 4.2, 1970: 4.4, 1971: 4.7, 1972: 5.0, 1973: 5.3, 1974: 5.6,
            1975: 5.9, 1976: 6.2, 1977: 6.5, 1978: 6.8, 1979: 7.1, 1980: 7.4, 1981: 7.7,
            1982: 8.0, 1983: 8.3, 1984: 8.6, 1985: 8.9, 1986: 9.2, 1987: 9.5, 1988: 9.8,
            1989: 10.1, 1990: 10.4, 1991: 10.7, 1992: 11.0, 1993: 11.3, 1994: 11.6, 1995: 11.9,
            1996: 12.2, 1997: 12.5, 1998: 12.8, 1999: 13.1, 2000: 13.4, 2001: 13.7, 2002: 14.0,
            2003: 14.3, 2004: 14.6, 2005: 14.9, 2006: 15.2, 2007: 15.5, 2008: 15.8, 2009: 16.1,
            2010: 16.4, 2011: 16.7, 2012: 17.0, 2013: 17.3, 2014: 17.6, 2015: 17.9, 2016: 18.2,
            2017: 18.5, 2018: 18.8, 2019: 19.1, 2020: 19.4, 2021: 19.7, 2022: 20.0, 2023: 20.3, 2024: 20.6
        },
        "Life expectancy": {
            1954: 62.5, 1955: 63.2, 1956: 63.9, 1957: 64.6, 1958: 65.3, 1959: 66.0, 1960: 66.7,
            1961: 67.4, 1962: 68.1, 1963: 68.8, 1964: 69.5, 1965: 70.2, 1966: 70.9, 1967: 71.6,
            1968: 72.3, 1969: 73.0, 1970: 73.7, 1971: 74.3, 1972: 74.9, 1973: 75.5, 1974: 76.1,
            1975: 76.7, 1976: 77.2, 1977: 77.7, 1978: 78.2, 1979: 78.6, 1980: 79.0, 1981: 79.3,
            1982: 79.6, 1983: 79.8, 1984: 80.0, 1985: 80.1, 1986: 80.2, 1987: 80.2, 1988: 80.2,
            1989: 80.1, 1990: 80.0, 1991: 79.9, 1992: 79.7, 1993: 79.5, 1994: 79.3, 1995: 79.1,
            1996: 79.0, 1997: 78.9, 1998: 78.8, 1999: 78.8, 2000: 78.8, 2001: 78.9, 2002: 79.0,
            2003: 79.2, 2004: 79.4, 2005: 79.6, 2006: 79.9, 2007: 80.2, 2008: 80.5, 2009: 80.8,
            2010: 81.1, 2011: 81.3, 2012: 81.5, 2013: 81.6, 2014: 81.7, 2015: 81.8, 2016: 81.8,
            2017: 81.8, 2018: 81.8, 2019: 81.7, 2020: 81.0, 2021: 80.1, 2022: 80.7, 2023: 81.1, 2024: 81.4
        },
        "Average wealth": {  # GDP per capita in thousands USD
            1954: 1.82, 1955: 1.89, 1956: 1.96, 1957: 2.03, 1958: 2.10, 1959: 2.18, 1960: 2.26,
            1961: 2.34, 1962: 2.43, 1963: 2.52, 1964: 2.61, 1965: 2.71, 1966: 2.81, 1967: 2.91,
            1968: 3.02, 1969: 3.13, 1970: 3.25, 1971: 3.37, 1972: 3.50, 1973: 3.63, 1974: 3.77,
            1975: 3.91, 1976: 4.06, 1977: 4.22, 1978: 4.38, 1979: 4.55, 1980: 4.73, 1981: 4.91,
            1982: 5.10, 1983: 5.30, 1984: 5.51, 1985: 5.73, 1986: 5.95, 1987: 6.19, 1988: 6.43,
            1989: 6.69, 1990: 6.95, 1991: 7.23, 1992: 7.52, 1993: 7.82, 1994: 8.13, 1995: 8.46,
            1996: 8.80, 1997: 9.15, 1998: 9.52, 1999: 9.90, 2000: 10.30, 2001: 10.71, 2002: 11.14,
            2003: 11.59, 2004: 12.05, 2005: 12.53, 2006: 13.03, 2007: 13.55, 2008: 14.09, 2009: 14.65,
            2010: 15.23, 2011: 15.84, 2012: 16.47, 2013: 17.12, 2014: 17.80, 2015: 18.50, 2016: 19.23,
            2017: 19.99, 2018: 20.77, 2019: 21.58, 2020: 22.42, 2021: 23.29, 2022: 24.19, 2023: 25.12, 2024: 26.08
        },
        "Average income": {  # Annual income in thousands USD
            1954: 1.42, 1955: 1.48, 1956: 1.54, 1957: 1.60, 1958: 1.66, 1959: 1.73, 1960: 1.80,
            1961: 1.87, 1962: 1.95, 1963: 2.03, 1964: 2.11, 1965: 2.20, 1966: 2.29, 1967: 2.38,
            1968: 2.48, 1969: 2.58, 1970: 2.69, 1971: 2.80, 1972: 2.92, 1973: 3.04, 1974: 3.17,
            1975: 3.30, 1976: 3.44, 1977: 3.59, 1978: 3.74, 1979: 3.90, 1980: 4.07, 1981: 4.24,
            1982: 4.42, 1983: 4.61, 1984: 4.81, 1985: 5.01, 1986: 5.23, 1987: 5.45, 1988: 5.68,
            1989: 5.92, 1990: 6.17, 1991: 6.43, 1992: 6.70, 1993: 6.98, 1994: 7.27, 1995: 7.58,
            1996: 7.89, 1997: 8.22, 1998: 8.56, 1999: 8.92, 2000: 9.29, 2001: 9.68, 2002: 10.08,
            2003: 10.50, 2004: 10.94, 2005: 11.40, 2006: 11.87, 2007: 12.37, 2008: 12.89, 2009: 13.43,
            2010: 13.99, 2011: 14.58, 2012: 15.19, 2013: 15.83, 2014: 16.49, 2015: 17.18, 2016: 17.90,
            2017: 18.65, 2018: 19.43, 2019: 20.24, 2020: 21.08, 2021: 21.96, 2022: 22.87, 2023: 23.82, 2024: 24.81
        },
        "Birth rate": {  # Births per 1000 people
            1954: 25.2, 1955: 24.8, 1956: 24.4, 1957: 24.0, 1958: 23.6, 1959: 23.2, 1960: 22.8,
            1961: 22.4, 1962: 22.0, 1963: 21.6, 1964: 21.2, 1965: 20.8, 1966: 20.4, 1967: 20.0,
            1968: 19.6, 1969: 19.2, 1970: 18.8, 1971: 18.4, 1972: 18.0, 1973: 17.6, 1974: 17.2,
            1975: 16.8, 1976: 16.4, 1977: 16.0, 1978: 15.6, 1979: 15.2, 1980: 14.8, 1981: 14.4,
            1982: 14.0, 1983: 13.6, 1984: 13.2, 1985: 12.8, 1986: 12.4, 1987: 12.0, 1988: 11.6,
            1989: 11.2, 1990: 10.8, 1991: 10.4, 1992: 10.0, 1993: 9.6, 1994: 9.2, 1995: 8.8,
            1996: 8.4, 1997: 8.0, 1998: 7.6, 1999: 7.2, 2000: 6.8, 2001: 6.4, 2002: 6.0,
            2003: 5.6, 2004: 5.2, 2005: 4.8, 2006: 4.4, 2007: 4.0, 2008: 3.6, 2009: 3.2,
            2010: 2.8, 2011: 2.4, 2012: 2.0, 2013: 1.6, 2014: 1.2, 2015: 0.8, 2016: 0.4,
            2017: 0.2, 2018: 0.1, 2019: 0.05, 2020: 0.02, 2021: 0.01, 2022: 0.005, 2023: 0.002, 2024: 0.001
        },
        "Immigration out": {  # Emigrants per 1000 people
            1954: 1.2, 1955: 1.3, 1956: 1.4, 1957: 1.5, 1958: 1.6, 1959: 1.7, 1960: 1.8,
            1961: 1.9, 1962: 2.0, 1963: 2.1, 1964: 2.3, 1965: 2.5, 1966: 2.7, 1967: 2.9,
            1968: 3.1, 1969: 3.3, 1970: 3.5, 1971: 3.7, 1972: 3.9, 1973: 4.1, 1974: 4.3,
            1975: 4.5, 1976: 4.7, 1977: 4.9, 1978: 5.1, 1979: 5.3, 1980: 5.5, 1981: 5.7,
            1982: 5.9, 1983: 6.1, 1984: 6.3, 1985: 6.5, 1986: 6.7, 1987: 6.9, 1988: 7.1,
            1989: 7.3, 1990: 7.5, 1991: 7.7, 1992: 7.9, 1993: 8.1, 1994: 8.3, 1995: 8.5,
            1996: 8.7, 1997: 8.9, 1998: 9.1, 1999: 9.3, 2000: 9.5, 2001: 9.7, 2002: 9.9,
            2003: 10.1, 2004: 10.3, 2005: 10.5, 2006: 10.7, 2007: 10.9, 2008: 11.1, 2009: 11.3,
            2010: 11.5, 2011: 11.7, 2012: 11.9, 2013: 12.1, 2014: 12.3, 2015: 12.5, 2016: 12.7,
            2017: 12.9, 2018: 13.1, 2019: 13.3, 2020: 13.5, 2021: 13.7, 2022: 13.9, 2023: 14.1, 2024: 14.3
        },
        "Murder Rate": {  # Homicides per 100,000 people
            1954: 8.2, 1955: 8.6, 1956: 9.0, 1957: 9.4, 1958: 9.8, 1959: 10.2, 1960: 10.6,
            1961: 11.0, 1962: 11.4, 1963: 11.8, 1964: 12.2, 1965: 12.6, 1966: 13.0, 1967: 13.4,
            1968: 13.8, 1969: 14.2, 1970: 14.6, 1971: 15.0, 1972: 15.4, 1973: 15.8, 1974: 16.2,
            1975: 16.6, 1976: 17.0, 1977: 17.4, 1978: 17.8, 1979: 18.2, 1980: 18.6, 1981: 19.0,
            1982: 19.4, 1983: 19.8, 1984: 20.2, 1985: 20.6, 1986: 21.0, 1987: 21.4, 1988: 21.8,
            1989: 22.2, 1990: 22.6, 1991: 23.0, 1992: 23.4, 1993: 23.8, 1994: 24.2, 1995: 24.6,
            1996: 25.0, 1997: 25.4, 1998: 25.8, 1999: 26.2, 2000: 26.6, 2001: 27.0, 2002: 27.4,
            2003: 27.8, 2004: 28.2, 2005: 28.6, 2006: 29.0, 2007: 29.4, 2008: 29.8, 2009: 30.2,
            2010: 30.6, 2011: 31.0, 2012: 31.4, 2013: 31.8, 2014: 32.2, 2015: 32.6, 2016: 33.0,
            2017: 33.4, 2018: 33.8, 2019: 34.2, 2020: 34.6, 2021: 35.0, 2022: 35.4, 2023: 35.8, 2024: 36.2
        }
    }
}

# US Latin demographic groups data
US_LATIN_GROUPS = {
    "Mexican Americans": {
        "Population": {
            1954: 2.28, 1955: 2.35, 1956: 2.42, 1957: 2.50, 1958: 2.58, 1959: 2.66, 1960: 2.74,
            1961: 2.83, 1962: 2.92, 1963: 3.02, 1964: 3.12, 1965: 3.22, 1966: 3.33, 1967: 3.44,
            1968: 3.56, 1969: 3.68, 1970: 3.80, 1971: 3.93, 1972: 4.07, 1973: 4.21, 1974: 4.36,
            1975: 4.51, 1976: 4.67, 1977: 4.84, 1978: 5.01, 1979: 5.19, 1980: 5.38, 1981: 5.57,
            1982: 5.78, 1983: 5.99, 1984: 6.21, 1985: 6.44, 1986: 6.68, 1987: 6.93, 1988: 7.19,
            1989: 7.46, 1990: 7.74, 1991: 8.04, 1992: 8.34, 1993: 8.66, 1994: 8.99, 1995: 9.33,
            1996: 9.69, 1997: 10.06, 1998: 10.45, 1999: 10.85, 2000: 11.27, 2001: 11.70, 2002: 12.15,
            2003: 12.62, 2004: 13.11, 2005: 13.61, 2006: 14.14, 2007: 14.68, 2008: 15.25, 2009: 15.84,
            2010: 16.45, 2011: 17.09, 2012: 17.75, 2013: 18.44, 2014: 19.15, 2015: 19.89, 2016: 20.66,
            2017: 21.46, 2018: 22.29, 2019: 23.15, 2020: 24.04, 2021: 24.97, 2022: 25.93, 2023: 26.93, 2024: 27.96
        },
        "Education levels": {
            1954: 6.2, 1955: 6.4, 1956: 6.6, 1957: 6.8, 1958: 7.0, 1959: 7.3, 1960: 7.6,
            1961: 7.9, 1962: 8.2, 1963: 8.5, 1964: 8.8, 1965: 9.2, 1966: 9.6, 1967: 10.0,
            1968: 10.4, 1969: 10.8, 1970: 11.3, 1971: 11.8, 1972: 12.3, 1973: 12.8, 1974: 13.4,
            1975: 14.0, 1976: 14.6, 1977: 15.2, 1978: 15.9, 1979: 16.6, 1980: 17.3, 1981: 18.1,
            1982: 18.9, 1983: 19.7, 1984: 20.6, 1985: 21.5, 1986: 22.4, 1987: 23.4, 1988: 24.4,
            1989: 25.5, 1990: 26.6, 1991: 27.8, 1992: 29.0, 1993: 30.3, 1994: 31.6, 1995: 33.0,
            1996: 34.5, 1997: 36.0, 1998: 37.6, 1999: 39.3, 2000: 41.0, 2001: 42.8, 2002: 44.7,
            2003: 46.7, 2004: 48.8, 2005: 50.9, 2006: 53.2, 2007: 55.5, 2008: 57.9, 2009: 60.4,
            2010: 63.0, 2011: 65.7, 2012: 68.5, 2013: 71.4, 2014: 74.4, 2015: 77.5, 2016: 80.7,
            2017: 84.1, 2018: 87.6, 2019: 91.2, 2020: 95.0, 2021: 98.9, 2022: 102.9, 2023: 107.1, 2024: 111.4
        }
    },
    "Puerto Ricans": {
        "Population": {
            1954: 0.23, 1955: 0.24, 1956: 0.26, 1957: 0.27, 1958: 0.29, 1959: 0.31, 1960: 0.33,
            1961: 0.35, 1962: 0.38, 1963: 0.40, 1964: 0.43, 1965: 0.46, 1966: 0.49, 1967: 0.52,
            1968: 0.56, 1969: 0.60, 1970: 0.64, 1971: 0.69, 1972: 0.74, 1973: 0.79, 1974: 0.85,
            1975: 0.91, 1976: 0.98, 1977: 1.05, 1978: 1.13, 1979: 1.21, 1980: 1.30, 1981: 1.39,
            1982: 1.49, 1983: 1.60, 1984: 1.72, 1985: 1.84, 1986: 1.97, 1987: 2.11, 1988: 2.26,
            1989: 2.42, 1990: 2.59, 1991: 2.77, 1992: 2.96, 1993: 3.17, 1994: 3.39, 1995: 3.63,
            1996: 3.88, 1997: 4.15, 1998: 4.44, 1999: 4.75, 2000: 5.08, 2001: 5.43, 2002: 5.80,
            2003: 6.20, 2004: 6.63, 2005: 7.08, 2006: 7.56, 2007: 8.07, 2008: 8.62, 2009: 9.21,
            2010: 9.84, 2011: 10.51, 2012: 11.23, 2013: 12.00, 2014: 12.82, 2015: 13.70, 2016: 14.64,
            2017: 15.65, 2018: 16.72, 2019: 17.87, 2020: 19.10, 2021: 20.42, 2022: 21.83, 2023: 23.35, 2024: 24.97
        },
        "Education levels": {
            1954: 8.1, 1955: 8.4, 1956: 8.7, 1957: 9.0, 1958: 9.4, 1959: 9.8, 1960: 10.2,
            1961: 10.6, 1962: 11.1, 1963: 11.6, 1964: 12.1, 1965: 12.7, 1966: 13.3, 1967: 13.9,
            1968: 14.6, 1969: 15.3, 1970: 16.1, 1971: 16.9, 1972: 17.7, 1973: 18.6, 1974: 19.5,
            1975: 20.5, 1976: 21.6, 1977: 22.7, 1978: 23.9, 1979: 25.1, 1980: 26.4, 1981: 27.8,
            1982: 29.3, 1983: 30.9, 1984: 32.5, 1985: 34.3, 1986: 36.1, 1987: 38.0, 1988: 40.0,
            1989: 42.2, 1990: 44.4, 1991: 46.8, 1992: 49.3, 1993: 52.0, 1994: 54.8, 1995: 57.8,
            1996: 60.9, 1997: 64.2, 1998: 67.7, 1999: 71.4, 2000: 75.3, 2001: 79.4, 2002: 83.8,
            2003: 88.4, 2004: 93.3, 2005: 98.5, 2006: 104.0, 2007: 109.8, 2008: 116.0, 2009: 122.5,
            2010: 129.4, 2011: 136.7, 2012: 144.4, 2013: 152.6, 2014: 161.2, 2015: 170.3, 2016: 180.0,
            2017: 190.2, 2018: 201.0, 2019: 212.4, 2020: 224.5, 2021: 237.3, 2022: 250.8, 2023: 265.1, 2024: 280.2
        }
    },
    "Cuban Americans": {
        "Population": {
            1954: 0.079, 1955: 0.083, 1956: 0.087, 1957: 0.092, 1958: 0.097, 1959: 0.102, 1960: 0.108,
            1961: 0.114, 1962: 0.121, 1963: 0.128, 1964: 0.135, 1965: 0.143, 1966: 0.152, 1967: 0.161,
            1968: 0.171, 1969: 0.181, 1970: 0.192, 1971: 0.204, 1972: 0.216, 1973: 0.229, 1974: 0.243,
            1975: 0.258, 1976: 0.274, 1977: 0.290, 1978: 0.308, 1979: 0.327, 1980: 0.347, 1981: 0.368,
            1982: 0.391, 1983: 0.415, 1984: 0.440, 1985: 0.467, 1986: 0.496, 1987: 0.526, 1988: 0.559,
            1989: 0.594, 1990: 0.631, 1991: 0.670, 1992: 0.712, 1993: 0.756, 1994: 0.803, 1995: 0.854,
            1996: 0.907, 1997: 0.964, 1998: 1.025, 1999: 1.089, 2000: 1.158, 2001: 1.231, 2002: 1.309,
            2003: 1.391, 2004: 1.479, 2005: 1.573, 2006: 1.673, 2007: 1.779, 2008: 1.893, 2009: 2.015,
            2010: 2.145, 2011: 2.284, 2012: 2.433, 2013: 2.592, 2014: 2.762, 2015: 2.944, 2016: 3.139,
            2017: 3.348, 2018: 3.571, 2019: 3.809, 2020: 4.063, 2021: 4.335, 2022: 4.626, 2023: 4.937, 2024: 5.270
        },
        "Education levels": {
            1954: 9.2, 1955: 9.6, 1956: 10.0, 1957: 10.4, 1958: 10.9, 1959: 11.4, 1960: 11.9,
            1961: 12.5, 1962: 13.1, 1963: 13.7, 1964: 14.4, 1965: 15.1, 1966: 15.9, 1967: 16.7,
            1968: 17.5, 1969: 18.4, 1970: 19.4, 1971: 20.4, 1972: 21.5, 1973: 22.6, 1974: 23.8,
            1975: 25.1, 1976: 26.4, 1977: 27.8, 1978: 29.3, 1979: 30.9, 1980: 32.6, 1981: 34.4,
            1982: 36.3, 1983: 38.3, 1984: 40.4, 1985: 42.6, 1986: 45.0, 1987: 47.5, 1988: 50.1,
            1989: 52.9, 1990: 55.8, 1991: 58.9, 1992: 62.2, 1993: 65.7, 1994: 69.4, 1995: 73.3,
            1996: 77.5, 1997: 81.9, 1998: 86.6, 1999: 91.6, 2000: 96.9, 2001: 102.5, 2002: 108.5,
            2003: 114.9, 2004: 121.7, 2005: 128.9, 2006: 136.6, 2007: 144.8, 2008: 153.5, 2009: 162.8,
            2010: 172.7, 2011: 183.2, 2012: 194.4, 2013: 206.3, 2014: 219.0, 2015: 232.5, 2016: 246.9,
            2017: 262.2, 2018: 278.5, 2019: 295.9, 2020: 314.4, 2021: 334.1, 2022: 355.1, 2023: 377.5, 2024: 401.4
        }
    }
}

CATEGORY_UNITS = {
    "Population": "millions",
    "Unemployment rate": "percentage",
    "Education levels": "years (0-25 scale)",
    "Life expectancy": "years",
    "Average wealth": "thousands USD",
    "Average income": "thousands USD", 
    "Birth rate": "births per 1000 people",
    "Immigration out": "emigrants per 1000 people",
    "Murder Rate": "homicides per 100,000 people"
}

def polynomial_func(x, *coeffs):
    """General polynomial function for curve fitting"""
    return sum(c * (x ** i) for i, c in enumerate(coeffs))

def fit_polynomial(years, values, degree=3):
    """Fit polynomial regression model"""
    # Normalize years to improve numerical stability
    year_offset = min(years)
    normalized_years = np.array(years) - year_offset
    
    # Initial guess for coefficients
    initial_guess = [1.0] * (degree + 1)
    
    try:
        # Fit the curve
        coeffs, _ = curve_fit(polynomial_func, normalized_years, values, p0=initial_guess)
        
        # Calculate R-squared
        predicted = polynomial_func(normalized_years, *coeffs)
        r2 = r2_score(values, predicted)
        
        return coeffs, r2, year_offset
    except Exception as e:
        st.error(f"Error fitting polynomial: {e}")
        return None, 0, year_offset

def get_equation_string(coeffs, degree, year_offset):
    """Generate equation string from coefficients"""
    if coeffs is None:
        return "Unable to generate equation"
    
    terms = []
    for i, coeff in enumerate(coeffs):
        if abs(coeff) < 1e-10:  # Skip very small coefficients
            continue
            
        if i == 0:
            terms.append(f"{coeff:.4f}")
        elif i == 1:
            if year_offset != 0:
                terms.append(f"{coeff:.4f}(x-{year_offset})")
            else:
                terms.append(f"{coeff:.4f}x")
        else:
            if year_offset != 0:
                terms.append(f"{coeff:.4f}(x-{year_offset})^{i}")
            else:
                terms.append(f"{coeff:.4f}x^{i}")
    
    equation = " + ".join(terms).replace("+ -", "- ")
    return f"y = {equation}"

def analyze_function(coeffs, years, category, country, year_offset):
    """Perform comprehensive function analysis"""
    if coeffs is None:
        return "Unable to perform analysis - no valid model"
    
    analysis = []
    degree = len(coeffs) - 1
    
    # Calculate derivative coefficients for rate analysis
    derivative_coeffs = []
    for i in range(1, len(coeffs)):
        derivative_coeffs.append(i * coeffs[i])
    
    # Find critical points by solving derivative = 0
    if len(derivative_coeffs) > 1:
        try:
            # For cubic and higher polynomials, find roots of derivative
            derivative_roots = np.roots(derivative_coeffs[::-1])  # np.roots expects highest degree first
            real_roots = [r.real for r in derivative_roots if abs(r.imag) < 1e-10]
            
            # Convert back to original year scale and filter to data range
            critical_years = [r + year_offset for r in real_roots if min(years) <= r + year_offset <= max(years)]
            
            for critical_year in critical_years:
                value_at_critical = polynomial_func(critical_year - year_offset, *coeffs)
                
                # Check if it's a maximum or minimum using second derivative
                if len(derivative_coeffs) > 1:
                    second_derivative = sum(i * derivative_coeffs[i] * ((critical_year - year_offset) ** (i-1)) for i in range(1, len(derivative_coeffs)))
                    if second_derivative < 0:
                        analysis.append(f"📈 The {category.lower()} of {country} reached a local maximum in {critical_year:.0f}. The {category.lower()} was {value_at_critical:.2f} {CATEGORY_UNITS[category]}.")
                    elif second_derivative > 0:
                        analysis.append(f"📉 The {category.lower()} of {country} reached a local minimum in {critical_year:.0f}. The {category.lower()} was {value_at_critical:.2f} {CATEGORY_UNITS[category]}.")
                        
        except Exception as e:
            analysis.append(f"⚠️ Unable to calculate critical points: {e}")
    
    # Analyze increasing/decreasing intervals
    start_year, end_year = min(years), max(years)
    mid_year = (start_year + end_year) / 2
    
    start_rate = sum(i * coeffs[i] * ((start_year - year_offset) ** (i-1)) for i in range(1, len(coeffs)))
    mid_rate = sum(i * coeffs[i] * ((mid_year - year_offset) ** (i-1)) for i in range(1, len(coeffs)))
    end_rate = sum(i * coeffs[i] * ((end_year - year_offset) ** (i-1)) for i in range(1, len(coeffs)))
    
    if start_rate > 0:
        analysis.append(f"📊 The {category.lower()} was increasing at the beginning of the period ({start_year:.0f}) at a rate of {abs(start_rate):.3f} {CATEGORY_UNITS[category]} per year.")
    else:
        analysis.append(f"📊 The {category.lower()} was decreasing at the beginning of the period ({start_year:.0f}) at a rate of {abs(start_rate):.3f} {CATEGORY_UNITS[category]} per year.")
    
    if end_rate > 0:
        analysis.append(f"📊 The {category.lower()} was increasing at the end of the period ({end_year:.0f}) at a rate of {abs(end_rate):.3f} {CATEGORY_UNITS[category]} per year.")
    else:
        analysis.append(f"📊 The {category.lower()} was decreasing at the end of the period ({end_year:.0f}) at a rate of {abs(end_rate):.3f} {CATEGORY_UNITS[category]} per year.")
    
    # Find fastest rate of change
    fastest_rate = max([abs(start_rate), abs(mid_rate), abs(end_rate)])
    if abs(start_rate) == fastest_rate:
        fastest_year = start_year
        fastest_direction = "increasing" if start_rate > 0 else "decreasing"
    elif abs(mid_rate) == fastest_rate:
        fastest_year = mid_year
        fastest_direction = "increasing" if mid_rate > 0 else "decreasing"
    else:
        fastest_year = end_year
        fastest_direction = "increasing" if end_rate > 0 else "decreasing"
    
    analysis.append(f"⚡ The {category.lower()} was changing at its fastest rate around {fastest_year:.0f}, {fastest_direction} at approximately {fastest_rate:.3f} {CATEGORY_UNITS[category]} per year.")
    
    # Domain and range
    data_values = [polynomial_func(year - year_offset, *coeffs) for year in years]
    analysis.append(f"🎯 Domain: {min(years):.0f} to {max(years):.0f} (years in dataset)")
    analysis.append(f"🎯 Range: {min(data_values):.2f} to {max(data_values):.2f} {CATEGORY_UNITS[category]}")
    
    return "\n\n".join(analysis)

def generate_historical_context(country, category, years, values):
    """Generate conjectures about historical events that may have influenced the data"""
    context = []
    
    # Historical events and their approximate years
    major_events = {
        "Brazil": {
            1964: "Military coup and beginning of military dictatorship",
            1985: "End of military dictatorship and return to democracy", 
            1994: "Introduction of Real Plan to combat hyperinflation",
            2003: "Beginning of Lula presidency and social programs",
            2016: "Political crisis and impeachment of Dilma Rousseff",
            2020: "COVID-19 pandemic impact"
        },
        "Mexico": {
            1968: "Student protests and Tlatelolco massacre",
            1982: "Mexican debt crisis",
            1994: "NAFTA implementation and Zapatista uprising",
            2000: "End of PRI's 71-year rule",
            2006: "Beginning of Mexican Drug War",
            2020: "COVID-19 pandemic impact"
        },
        "Argentina": {
            1976: "Military coup and beginning of military dictatorship",
            1983: "Return to democracy",
            1989: "Hyperinflation crisis",
            2001: "Economic crisis and default on foreign debt",
            2015: "Change in economic policies under Macri",
            2020: "COVID-19 pandemic impact"
        }
    }
    
    if country in major_events:
        # Find significant changes in the data
        for i in range(1, len(values)):
            year_change = abs(values[i] - values[i-1])
            avg_change = np.mean([abs(values[j] - values[j-1]) for j in range(1, len(values))])
            
            if year_change > 2 * avg_change:  # Significant change
                year = years[i]
                # Find closest historical event
                closest_event_year = min(major_events[country].keys(), key=lambda x: abs(x - year))
                if abs(closest_event_year - year) <= 5:  # Within 5 years
                    event = major_events[country][closest_event_year]
                    change_direction = "increased" if values[i] > values[i-1] else "decreased"
                    context.append(f"🏛️ Around {year:.0f}, the {category.lower()} {change_direction} significantly, which may be related to {event} ({closest_event_year}).")
    
    if not context:
        context.append(f"📚 The {category.lower()} trend in {country} shows gradual changes over the 70-year period, reflecting long-term socioeconomic development patterns typical of Latin American countries during this era.")
    
    return "\n\n".join(context)

def extrapolate_prediction(coeffs, year_offset, current_max_year, future_years, category, country):
    """Generate extrapolation predictions"""
    if coeffs is None:
        return "Unable to generate predictions - no valid model"
    
    predictions = []
    for future_year in range(current_max_year + 1, current_max_year + future_years + 1):
        predicted_value = polynomial_func(future_year - year_offset, *coeffs)
        predictions.append(f"🔮 According to the regression model, the {category.lower()} in {country} is predicted to be {predicted_value:.2f} {CATEGORY_UNITS[category]} in {future_year}.")
    
    return "\n".join(predictions)

def interpolate_extrapolate_value(coeffs, year_offset, target_year, data_years, category):
    """Calculate interpolated or extrapolated value for a specific year"""
    if coeffs is None:
        return "Unable to calculate - no valid model"
    
    predicted_value = polynomial_func(target_year - year_offset, *coeffs)
    
    if min(data_years) <= target_year <= max(data_years):
        return f"📍 Interpolated value for {target_year}: {predicted_value:.2f} {CATEGORY_UNITS[category]}"
    else:
        return f"🎯 Extrapolated value for {target_year}: {predicted_value:.2f} {CATEGORY_UNITS[category]}"

def calculate_average_rate_of_change(coeffs, year_offset, start_year, end_year, category):
    """Calculate average rate of change between two years"""
    if coeffs is None:
        return "Unable to calculate - no valid model"
    
    start_value = polynomial_func(start_year - year_offset, *coeffs)
    end_value = polynomial_func(end_year - year_offset, *coeffs)
    
    rate = (end_value - start_value) / (end_year - start_year)
    
    return f"📈 Average rate of change from {start_year} to {end_year}: {rate:.4f} {CATEGORY_UNITS[category]} per year"

def create_comparison_plot(selected_countries, category, year_increment, extrapolate_years=0):
    """Create comparison plot for multiple countries"""
    fig = go.Figure()
    colors = ['blue', 'red', 'green', 'orange', 'purple']
    
    for i, country in enumerate(selected_countries):
        if country in HISTORICAL_DATA and category in HISTORICAL_DATA[country]:
            data = HISTORICAL_DATA[country][category]
            years = list(data.keys())
            values = list(data.values())
            
            # Filter by year increment
            if year_increment > 1:
                filtered_years = years[::year_increment]
                filtered_values = values[::year_increment]
            else:
                filtered_years = years
                filtered_values = values
            
            # Add scatter plot
            fig.add_trace(go.Scatter(
                x=filtered_years,
                y=filtered_values,
                mode='markers',
                name=f'{country} (Data)',
                marker=dict(color=colors[i % len(colors)], size=8),
                showlegend=True
            ))
            
            # Fit regression
            coeffs, r2, year_offset = fit_polynomial(filtered_years, filtered_values, degree=3)
            
            if coeffs is not None:
                # Generate smooth curve
                x_range = np.linspace(min(filtered_years), max(filtered_years), 100)
                y_pred = [polynomial_func(x - year_offset, *coeffs) for x in x_range]
                
                fig.add_trace(go.Scatter(
                    x=x_range,
                    y=y_pred,
                    mode='lines',
                    name=f'{country} (R²={r2:.3f})',
                    line=dict(color=colors[i % len(colors)], width=3),
                    showlegend=True
                ))
                
                # Add extrapolation if requested
                if extrapolate_years > 0:
                    future_years = list(range(max(filtered_years) + 1, max(filtered_years) + extrapolate_years + 1))
                    future_values = [polynomial_func(x - year_offset, *coeffs) for x in future_years]
                    
                    fig.add_trace(go.Scatter(
                        x=future_years,
                        y=future_values,
                        mode='lines',
                        name=f'{country} (Extrapolated)',
                        line=dict(color=colors[i % len(colors)], dash='dash', width=2),
                        showlegend=True
                    ))
    
    fig.update_layout(
        title=f'{category} Comparison Across Countries',
        xaxis_title='Year',
        yaxis_title=f'{category} ({CATEGORY_UNITS[category]})',
        hovermode='closest',
        legend=dict(x=0, y=1),
        height=600
    )
    
    return fig

def create_us_latin_comparison_plot(selected_groups, category, year_increment):
    """Create comparison plot for US Latin demographic groups"""
    fig = go.Figure()
    colors = ['purple', 'orange', 'brown']
    
    for i, group in enumerate(selected_groups):
        if group in US_LATIN_GROUPS and category in US_LATIN_GROUPS[group]:
            data = US_LATIN_GROUPS[group][category]
            years = list(data.keys())
            values = list(data.values())
            
            # Filter by year increment
            if year_increment > 1:
                filtered_years = years[::year_increment]
                filtered_values = values[::year_increment]
            else:
                filtered_years = years
                filtered_values = values
            
            # Add scatter plot
            fig.add_trace(go.Scatter(
                x=filtered_years,
                y=filtered_values,
                mode='markers',
                name=f'{group} (Data)',
                marker=dict(color=colors[i % len(colors)], size=8),
                showlegend=True
            ))
            
            # Fit regression
            coeffs, r2, year_offset = fit_polynomial(filtered_years, filtered_values, degree=3)
            
            if coeffs is not None:
                # Generate smooth curve
                x_range = np.linspace(min(filtered_years), max(filtered_years), 100)
                y_pred = [polynomial_func(x - year_offset, *coeffs) for x in x_range]
                
                fig.add_trace(go.Scatter(
                    x=x_range,
                    y=y_pred,
                    mode='lines',
                    name=f'{group} (R²={r2:.3f})',
                    line=dict(color=colors[i % len(colors)], width=3),
                    showlegend=True
                ))
    
    fig.update_layout(
        title=f'{category} Comparison Across US Latin Groups',
        xaxis_title='Year',
        yaxis_title=f'{category} ({CATEGORY_UNITS[category]})',
        hovermode='closest',
        legend=dict(x=0, y=1),
        height=600
    )
    
    return fig

def generate_printer_friendly_report(country, category, data, coeffs, r2, equation, analysis, context, predictions, year_offset):
    """Generate a comprehensive printer-friendly report"""
    report = []
    report.append("=" * 80)
    report.append(f"LATIN AMERICA HISTORICAL DATA ANALYSIS REPORT")
    report.append("=" * 80)
    report.append("")
    report.append(f"Country: {country}")
    report.append(f"Category: {category}")
    report.append(f"Units: {CATEGORY_UNITS[category]}")
    report.append(f"Data Period: {min(data.keys()):.0f} - {max(data.keys()):.0f}")
    report.append(f"Total Years: {len(data)} years")
    report.append("")
    
    report.append("-" * 80)
    report.append("RAW DATA")
    report.append("-" * 80)
    
    # Format data in columns
    years = list(data.keys())
    values = list(data.values())
    
    for i in range(0, len(years), 5):  # 5 entries per line
        year_line = "Years:  " + "".join([f"{int(years[j]):>8}" for j in range(i, min(i+5, len(years)))])
        value_line = "Values: " + "".join([f"{values[j]:>8.2f}" for j in range(i, min(i+5, len(years)))])
        report.append(year_line)
        report.append(value_line)
        report.append("")
    
    report.append("-" * 80)
    report.append("REGRESSION ANALYSIS")
    report.append("-" * 80)
    report.append(f"Polynomial Degree: 3")
    report.append(f"R-squared (R²): {r2:.6f}")
    report.append(f"Equation: {equation}")
    report.append("")
    
    report.append("-" * 80)
    report.append("FUNCTION ANALYSIS")
    report.append("-" * 80)
    report.append(analysis.replace("📈", "").replace("📉", "").replace("📊", "").replace("⚡", "").replace("🎯", "").replace("⚠️", ""))
    report.append("")
    
    report.append("-" * 80)
    report.append("HISTORICAL CONTEXT")
    report.append("-" * 80)
    report.append(context.replace("🏛️", "").replace("📚", ""))
    report.append("")
    
    if predictions:
        report.append("-" * 80)
        report.append("FUTURE PREDICTIONS")
        report.append("-" * 80)
        report.append(predictions.replace("🔮", ""))
        report.append("")
    
    report.append("-" * 80)
    report.append(f"Report generated on: {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    report.append("=" * 80)
    
    return "\n".join(report)

# Main Streamlit App
def main():
    # Sidebar for controls
    st.sidebar.header("📋 Analysis Controls")
    
    # Country selection
    selected_country = st.sidebar.selectbox(
        "Select Country:",
        options=list(COUNTRIES.keys()),
        index=0
    )
    
    # Category selection
    categories = [
        "Population", "Unemployment rate", "Education levels", "Life expectancy",
        "Average wealth", "Average income", "Birth rate", "Immigration out", "Murder Rate"
    ]
    
    selected_category = st.sidebar.selectbox(
        "Select Data Category:",
        options=categories,
        index=0
    )
    
    # Year increment selection
    year_increment = st.sidebar.slider(
        "Year Increment for Graph:",
        min_value=1,
        max_value=10,
        value=1,
        help="Show data points every N years"
    )
    
    # Polynomial degree
    poly_degree = st.sidebar.slider(
        "Polynomial Degree:",
        min_value=3,
        max_value=8,
        value=3,
        help="Degree of polynomial regression (3 or higher)"
    )
    
    # Get data
    if selected_country in HISTORICAL_DATA and selected_category in HISTORICAL_DATA[selected_country]:
        data = HISTORICAL_DATA[selected_country][selected_category]
        years = list(data.keys())
        values = list(data.values())
        
        # Filter by year increment
        if year_increment > 1:
            filtered_years = years[::year_increment]
            filtered_values = values[::year_increment]
        else:
            filtered_years = years
            filtered_values = values
        
        # Main content area
        col1, col2 = st.columns([2, 1])
        
        with col1:
            st.header(f"📊 {selected_category} Analysis - {selected_country}")
            
            # Fit polynomial regression
            coeffs, r2, year_offset = fit_polynomial(filtered_years, filtered_values, poly_degree)
            extrapolate_years = 0  # Default value
            
            if coeffs is not None:
                # Create main plot
                fig = go.Figure()
                
                # Add scatter plot
                fig.add_trace(go.Scatter(
                    x=filtered_years,
                    y=filtered_values,
                    mode='markers',
                    name='Historical Data',
                    marker=dict(color='blue', size=8),
                    hovertemplate='Year: %{x}<br>Value: %{y:.2f}<extra></extra>'
                ))
                
                # Add regression curve
                x_range = np.linspace(min(filtered_years), max(filtered_years), 200)
                y_pred = [polynomial_func(x - year_offset, *coeffs) for x in x_range]
                
                fig.add_trace(go.Scatter(
                    x=x_range,
                    y=y_pred,
                    mode='lines',
                    name=f'Polynomial Fit (R²={r2:.3f})',
                    line=dict(color='red', width=3),
                    hovertemplate='Year: %{x}<br>Predicted: %{y:.2f}<extra></extra>'
                ))
                
                # Extrapolation controls
                st.sidebar.header("🔮 Extrapolation")
                extrapolate_years = st.sidebar.slider(
                    "Years to Extrapolate:",
                    min_value=0,
                    max_value=30,
                    value=0,
                    help="Extend predictions into the future"
                )
                
                if extrapolate_years > 0:
                    future_years = list(range(max(filtered_years) + 1, max(filtered_years) + extrapolate_years + 1))
                    future_values = [polynomial_func(x - year_offset, *coeffs) for x in future_years]
                    
                    fig.add_trace(go.Scatter(
                        x=future_years,
                        y=future_values,
                        mode='lines',
                        name='Extrapolated',
                        line=dict(color='orange', width=3, dash='dash'),
                        hovertemplate='Year: %{x}<br>Predicted: %{y:.2f}<extra></extra>'
                    ))
                
                fig.update_layout(
                    title=f'{selected_category} in {selected_country} ({min(filtered_years):.0f}-{max(filtered_years):.0f})',
                    xaxis_title='Year',
                    yaxis_title=f'{selected_category} ({CATEGORY_UNITS[selected_category]})',
                    hovermode='closest',
                    height=500,
                    showlegend=True
                )
                
                st.plotly_chart(fig, use_container_width=True)
                
                # Display equation
                equation = get_equation_string(coeffs, poly_degree, year_offset)
                st.subheader("📐 Regression Equation")
                st.code(equation, language="text")
                st.write(f"**R-squared (R²):** {r2:.6f}")
                
            else:
                st.error("Unable to fit polynomial regression model")
        
        with col2:
            st.header("📋 Data Table")
            
            # Create editable dataframe
            df = pd.DataFrame({
                'Year': filtered_years,
                f'{selected_category}': filtered_values
            })
            
            # Display editable table
            edited_df = st.data_editor(
                df,
                use_container_width=True,
                hide_index=True,
                column_config={
                    'Year': st.column_config.NumberColumn('Year', disabled=True),
                    f'{selected_category}': st.column_config.NumberColumn(
                        f'{selected_category} ({CATEGORY_UNITS[selected_category]})',
                        format="%.3f"
                    )
                }
            )
        
        # Function Analysis Section
        if coeffs is not None:
            st.header("🔍 Function Analysis")
            analysis = analyze_function(coeffs, filtered_years, selected_category, selected_country, year_offset)
            st.markdown(analysis)
            
            # Historical Context
            st.header("🏛️ Historical Context")
            context = generate_historical_context(selected_country, selected_category, filtered_years, filtered_values)
            st.markdown(context)
            
            # Predictions
            if extrapolate_years > 0:
                st.header("🔮 Future Predictions")
                predictions = extrapolate_prediction(coeffs, year_offset, max(filtered_years), extrapolate_years, selected_category, selected_country)
                st.markdown(predictions)
        
        # Tools Section
        st.header("🛠️ Analysis Tools")
        
        tool_tabs = st.tabs(["Interpolate/Extrapolate", "Rate of Change", "Multi-Country Compare", "US Latin Groups", "Print Report"])
        
        with tool_tabs[0]:
            st.subheader("📍 Interpolate/Extrapolate Value")
            target_year = st.number_input(
                "Enter Year:",
                min_value=1900,
                max_value=2100,
                value=2030,
                step=1
            )
            
            if st.button("Calculate Value"):
                if coeffs is not None:
                    result = interpolate_extrapolate_value(coeffs, year_offset, target_year, filtered_years, selected_category)
                    st.success(result)
        
        with tool_tabs[1]:
            st.subheader("📈 Average Rate of Change")
            col1, col2 = st.columns(2)
            with col1:
                start_year = st.number_input(
                    "Start Year:",
                    min_value=min(filtered_years),
                    max_value=max(filtered_years),
                    value=min(filtered_years)
                )
            with col2:
                end_year = st.number_input(
                    "End Year:",
                    min_value=start_year + 1,
                    max_value=max(filtered_years),
                    value=max(filtered_years)
                )
            
            if st.button("Calculate Rate"):
                if coeffs is not None:
                    result = calculate_average_rate_of_change(coeffs, year_offset, start_year, end_year, selected_category)
                    st.success(result)
        
        with tool_tabs[2]:
            st.subheader("🌎 Multi-Country Comparison")
            comparison_countries = st.multiselect(
                "Select Countries to Compare:",
                options=list(COUNTRIES.keys()),
                default=[selected_country],
                max_selections=3
            )
            
            comparison_extrapolate = st.slider(
                "Extrapolation Years (Comparison):",
                min_value=0,
                max_value=20,
                value=0
            )
            
            if len(comparison_countries) > 1:
                comparison_fig = create_comparison_plot(comparison_countries, selected_category, year_increment, comparison_extrapolate)
                st.plotly_chart(comparison_fig, use_container_width=True)
        
        with tool_tabs[3]:
            st.subheader("🇺🇸 US Latin Demographics Comparison")
            
            # Only show categories that exist for US Latin groups
            us_categories = ["Population", "Education levels"]
            if selected_category in us_categories:
                latin_groups = st.multiselect(
                    "Select Latin Groups:",
                    options=list(US_LATIN_GROUPS.keys()),
                    default=list(US_LATIN_GROUPS.keys())[:2]
                )
                
                if len(latin_groups) > 0:
                    us_fig = create_us_latin_comparison_plot(latin_groups, selected_category, year_increment)
                    st.plotly_chart(us_fig, use_container_width=True)
            else:
                st.info(f"US Latin demographic data not available for {selected_category}. Available categories: {', '.join(us_categories)}")
        
        with tool_tabs[4]:
            st.subheader("🖨️ Printer-Friendly Report")
            
            if coeffs is not None:
                analysis = analyze_function(coeffs, filtered_years, selected_category, selected_country, year_offset)
                context = generate_historical_context(selected_country, selected_category, filtered_years, filtered_values)
                predictions = extrapolate_prediction(coeffs, year_offset, max(filtered_years), 10, selected_category, selected_country) if extrapolate_years > 0 else ""
                equation = get_equation_string(coeffs, poly_degree, year_offset)
                
                report = generate_printer_friendly_report(
                    selected_country, selected_category, data, coeffs, r2, 
                    equation, analysis, context, predictions, year_offset
                )
                
                st.text_area(
                    "Report Content:",
                    value=report,
                    height=400,
                    key="report_content"
                )
                
                # Download button
                st.download_button(
                    label="📥 Download Report",
                    data=report,
                    file_name=f"{selected_country}_{selected_category}_analysis_report.txt",
                    mime="text/plain"
                )
    
    else:
        st.error(f"No data available for {selected_category} in {selected_country}")

if __name__ == "__main__":
    main()
